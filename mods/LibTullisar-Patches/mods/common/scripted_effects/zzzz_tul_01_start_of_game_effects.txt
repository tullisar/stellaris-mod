# This is called in initializers for all standard empires, before the empire actually exists
generate_empire_home_planet = {
}

generate_home_system_resources = {
	every_system_planet = {
		limit = {
			colonizable_planet = no
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
		}
		prevent_anomaly = yes
		clear_deposits = yes
	}
	system_star = {
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
	}
	random_system_planet = {
		limit = {
			NOT = {
				has_planet_flag = starting_deposit
			}
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
			OR = {
				is_planet_class = pc_a_star
				is_planet_class = pc_b_star
				is_planet_class = pc_f_star
				is_planet_class = pc_g_star
				is_planet_class = pc_k_star
				is_planet_class = pc_m_star
				is_planet_class = pc_molten
				is_planet_class = pc_gas_giant
				is_planet_class = pc_t_star
			}
		}
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
	}
	while = {
		count = 2
		random_system_planet = {
			limit = {
				NOT = {
					has_planet_flag = starting_deposit
				}
				NOT = {
					has_planet_flag = ignore_startup_effect
				}
				OR = {
					is_asteroid = yes
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
					is_planet_class = pc_toxic
					is_planet_class = pc_frozen
				}
			}
			set_planet_flag = starting_mining_target
			set_planet_flag = starting_deposit
			set_deposit = d_minerals_5
		}
	}
	random_system_planet = {
		limit = {
			NOT = {
				has_planet_flag = starting_deposit
			}
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
			OR = {
				is_planet_class = pc_a_star
				is_planet_class = pc_b_star
				is_planet_class = pc_f_star
				is_planet_class = pc_g_star
				is_planet_class = pc_k_star
				is_planet_class = pc_m_star
				is_planet_class = pc_molten
				is_planet_class = pc_gas_giant
				is_planet_class = pc_t_star
			}
		}
		set_planet_flag = starting_deposit
		random_list = {
			50 = {
				set_deposit = d_energy_2
			}
			50 = {
				set_deposit = d_energy_3
			}
		}
	}
	random_system_planet = {
		limit = {
			NOT = {
				has_planet_flag = starting_deposit
			}
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
			OR = {
				is_asteroid = yes
				is_planet_class = pc_barren
				is_planet_class = pc_barren_cold
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
			}
		}
		set_planet_flag = starting_deposit
		random_list = {
			50 = {
				set_deposit = d_minerals_2
			}
			50 = {
				set_deposit = d_minerals_3
			}
		}
	}
	random_system_planet = {
		limit = {
			NOT = {
				has_planet_flag = starting_deposit
			}
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
			OR = {
				is_planet_class = pc_gas_giant
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
				is_planet_class = pc_barren_cold
				is_planet_class = pc_barren
				is_star = yes
			}
		}
		set_planet_flag = starting_research_target
		set_planet_flag = starting_deposit
		if = {
			limit = {
				is_planet_class = pc_toxic
			}
			set_deposit = d_society_3
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_barren
					is_star = yes
				}
			}
			set_deposit = d_physics_3
		}
		else = {
			set_deposit = d_engineering_3
		}
	}
	random_system_planet = {
		limit = {
			NOT = {
				has_planet_flag = starting_deposit
			}
			NOT = {
				has_planet_flag = ignore_startup_effect
			}
			OR = {
				is_planet_class = pc_gas_giant
				is_planet_class = pc_toxic
				is_planet_class = pc_frozen
				is_planet_class = pc_barren_cold
				is_planet_class = pc_barren
				is_star = yes
			}
		}
		set_planet_flag = starting_deposit
		if = {
			limit = {
				is_planet_class = pc_toxic
			}
			set_deposit = d_society_2
		}
		else_if = {
			limit = {
				OR = {
					is_planet_class = pc_barren
					is_star = yes
				}
			}
			set_deposit = d_physics_2
		}
		else = {
			set_deposit = d_engineering_2
		}
	}
}

# This is called after game start
generate_start_deposits_and_blockers = {
	clear_deposits = yes
	# blockers
	if = {
		limit = {
			owner = {
				has_origin = origin_post_apocalyptic
			}
		}
		add_deposit = d_tomb_world_ruins
		add_deposit = d_tomb_world_wasteland
	}
	else_if = {
		limit = {
			owner = {
				has_civic = civic_machine_terminator
				NOT = {
					has_origin = origin_machine
				}
			}
		}
		add_deposit = d_exterminators_ruins
		add_deposit = d_former_battlefield
	}
	else_if = {
		limit = {
			owner = {
				has_civic = civic_machine_servitor
			}
		}
		add_deposit = d_strip_mine
		add_deposit = d_unsupervised_settlement
	}
	else_if = {
		limit = {
			owner = {
				has_civic = civic_machine_assimilator
				NOT = {
					has_origin = origin_machine
				}
			}
		}
		add_deposit = d_strip_mine
		add_deposit = d_assimilators_ruins
	}
	else_if = {
		limit = {
			owner = {
				is_machine_empire = yes
				NOT = {
					has_origin = origin_machine
				}
			}
		}
		add_deposit = d_strip_mine
		add_deposit = d_machine_empire_ruins
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
				has_origin = origin_delicate_ecosystem
			}
		}
		add_deposit = d_collapsed_burrows
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
				has_origin = origin_terraformer
			}
		}
		add_deposit = d_collapsed_burrows
		add_deposit = d_failing_infrastructure
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
			}
		}
		add_deposit = d_collapsed_burrows
		add_deposit = d_failing_infrastructure
		add_deposit = d_failing_infrastructure
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_delicate_ecosystem
			}
		}
		add_deposit = d_decrepit_dwellings
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_terraformer
			}
		}
		add_deposit = d_decrepit_dwellings
		add_deposit = d_failing_infrastructure
	}
	else_if = {
		limit = {
			owner = {
				has_country_flag = human_2
			}
		}
		add_deposit = d_decrepit_dwellings
		add_deposit = d_dangerous_wildlife_blocker
		add_deposit = d_chrysanthemum
		owner = {
			give_technology = {
				tech = "tech_dangerous_wildlife"
				message = no
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_lost_colony
			}
		}
		add_deposit = d_decrepit_dwellings
		random_list = {
			1 = {
				add_deposit = d_mountain_range
				owner = {
					give_technology = {
						tech = "tech_mountain_range"
						message = no
					}
				}
			}
			1 = {
				add_deposit = d_active_volcano
				owner = {
					give_technology = {
						tech = "tech_volcano"
						message = no
					}
				}
			}
			1 = {
				add_deposit = d_dangerous_wildlife_blocker
				owner = {
					give_technology = {
						tech = "tech_dangerous_wildlife"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_wet = no
				}
				add_deposit = d_dense_jungle
				owner = {
					give_technology = {
						tech = "tech_dense_jungle"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_wet = no
				}
				add_deposit = d_toxic_kelp
				owner = {
					give_technology = {
						tech = "tech_toxic_kelp"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_dry = no
				}
				add_deposit = d_deep_sinkhole
				owner = {
					give_technology = {
						tech = "tech_deep_sinkhole"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_dry = no
				}
				add_deposit = d_quicksand_basin
				owner = {
					give_technology = {
						tech = "tech_quicksand_basin"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_cold = no
				}
				add_deposit = d_noxious_swamp
				owner = {
					give_technology = {
						tech = "tech_noxious_swamp"
						message = no
					}
				}
			}
			1 = {
				modifier = {
					factor = 0
					is_cold = no
				}
				add_deposit = d_massive_glacier
				owner = {
					give_technology = {
						tech = "tech_massive_glacier"
						message = no
					}
				}
			}
		}
		add_deposit = d_lost_colony
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_militarist
			}
		}
		add_deposit = d_decrepit_dwellings
		add_deposit = d_decrepit_dwellings
		add_deposit = d_decrepit_dwellings
		add_deposit = d_crater
	}
	else_if = {
		limit = {
			owner = {
				has_country_flag = the_voor
				has_origin = origin_primitive_cyborgs
			}
		}
		if = {
			limit = {
				planet_size < 21
			}
			set_planet_size = 21
		}
		add_deposit = d_massive_glacier
	}
	else_if = {
		limit = {
			owner = {
				has_origin = origin_primitive_cyborgs
				NOT = {
					has_country_flag = the_voor
				}
			}
		}
		if = {
			limit = {
				planet_size < 21
			}
			set_planet_size = 21
		}
		random_list = {
			1 = {
				add_deposit = d_mountain_range
			}
			1 = {
				add_deposit = d_active_volcano
			}
			1 = {
				add_deposit = d_dangerous_wildlife_blocker
			}
			1 = {
				modifier = {
					factor = 0
					is_wet = no
				}
				add_deposit = d_dense_jungle
			}
			1 = {
				modifier = {
					factor = 0
					is_wet = no
				}
				add_deposit = d_toxic_kelp
			}
			1 = {
				modifier = {
					factor = 0
					is_dry = no
				}
				add_deposit = d_deep_sinkhole
			}
			1 = {
				modifier = {
					factor = 0
					is_dry = no
				}
				add_deposit = d_quicksand_basin
			}
			1 = {
				modifier = {
					factor = 0
					is_cold = no
				}
				add_deposit = d_noxious_swamp
			}
			1 = {
				modifier = {
					factor = 0
					is_cold = no
				}
				add_deposit = d_massive_glacier
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				NOT = {
					has_origin = origin_machine
				}
			}
		}
		add_deposit = d_decrepit_dwellings
		add_deposit = d_failing_infrastructure
		add_deposit = d_failing_infrastructure
	}
	if = {
		limit = {
			owner = {
				is_civic_avian_construction = yes
			}
		}
		random_list = {
			1 = {
				add_deposit = d_mountain_range
			}
			1 = {
				modifier = {
					factor = 0
					is_wet = no
				}
				add_deposit = d_dense_jungle
			}
			1 = {
				modifier = {
					factor = 0
					NOT = {
						has_global_flag = has_new_frontiers_mod
					}
				}
				modifier = {
					factor = 0
					NOR = {
						is_planet_class = pc_continental
						is_planet_class = pc_tundra
						is_planet_class = pc_alpine
						has_modifier = "meridiem_world"
					}
				}
				modifier = {
					factor = 0
					OR = {
						has_modifier = "pangea_world"
						has_modifier = "young_world"
						has_modifier = "mineral_world"
					}
				}
				add_deposit = d_thick_forest
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				NOR = {
					has_valid_civic = civic_hive_devouring_swarm
					has_origin = origin_lithoid
				}
			}
		}
		while = {
			count = 4
			add_deposit = d_hibernating_lithoids
		}
	}
	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		while = {
			count = 2
			add_deposit = d_hibernating_lithoids
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_post_apocalyptic
			}
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent
		# 3 + 4 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins
		# 3 + 2 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		add_deposit = d_fungal_forest
	}
	if = {
		limit = {
			owner = {
				has_civic = civic_machine_terminator
			}
		}
		# 4 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent
		add_deposit = d_searing_desert
		# 4 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins
		# 3 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_life_seeded
			}
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			change_pc = pc_hive
		}
		set_planet_size = 30
		# 5 + 3 energy
		add_deposit = d_searing_desert
		add_deposit = d_underwater_vent
		add_deposit = d_tempestous_mountain
		# 5 + 3 mining
		add_deposit = d_ore_rich_caverns
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins
		# 5 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_lush_jungle
		add_deposit = d_teeming_reef
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
				}
			}
			add_deposit = d_rich_mountain
		}
		else = {
			add_deposit = d_black_soil
		}
		# 1 random medium deposit
		random_list = {
			33 = {
				add_deposit = d_frozen_gas_lake
			}
			33 = {
				add_deposit = d_prosperous_mesa
			}
			33 = {
				add_deposit = d_fertile_lands
			}
		}
		add_deposit = d_dust_caverns
		add_deposit = d_bubbling_swamp
		add_deposit = d_crystalline_caverns
	}
	if = {
		limit = {
			is_planet_class = pc_continental
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_rugged_woods
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_black_soil
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_tropical
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_submerged_ore_veins
			}
			else = {
				add_deposit = d_green_hills
				add_deposit = d_tropical_island
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_ocean
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_underwater_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_rushing_waterfalls
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_green_hills
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_submerged_ore_veins
			}
			else = {
				add_deposit = d_teeming_reef
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_arctic
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_lichen_fields
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_tundra
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_forgiving_tundra
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_alpine
		}
		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_frozen_gas_lake
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_hot_springs
		}
		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_forgiving_tundra
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_fungal_forest
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_desert
		}
		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_searing_desert
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_arid_highlands
		}
		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_nutritious_mudland
		add_deposit = d_great_river
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_nutritious_mudland
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_marvelous_oasis
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_arid
		}
		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_searing_desert
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_arid_highlands
		}
		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_bountiful_plains
		add_deposit = d_great_river
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_bountiful_plains
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_tropical_island
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_savannah
		}
		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_searing_desert
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_deposit = d_arid_highlands
		}
		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins
		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
		if = {
			limit = {
				owner = {
					is_machine_empire = no
				}
			}
			add_deposit = d_bountiful_plains
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_deposit = d_rich_mountain
			}
			else = {
				add_deposit = d_black_soil
			}
		}
	}
	if = {
		limit = {
			is_planet_class = pc_relic
			owner = {
				has_origin = origin_remnants
			}
		}
		set_planet_size = 22
		# 5 blockers
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_central_ruins
		add_deposit = d_remnant_crevice
		remove_deposit = d_failing_infrastructure
		remove_deposit = d_failing_infrastructure
		add_deposit = d_ancient_reactor_pits
		random_list = {
			1 = {
				add_deposit = d_abandoned_mining_tunnels
			}
			1 = {
				add_deposit = d_relic_metal_boneyard
				add_deposit = d_relic_metal_boneyard
			}
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_deposit = d_immense_solar_array
		}
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
				}
			}
			add_deposit = d_relic_metal_boneyard
		}
		add_deposit = d_overgrown_ruins
		if = {
			limit = {
				owner = {
					OR = {
						NOT = {
							is_machine_empire = yes
						}
						has_civic = civic_machine_assimilator
						has_civic = civic_machine_servitor
					}
				}
			}
			add_deposit = d_relic_hydroponics_blocker
		}
	}
	# Ocean Paradise Origin
	if = {
		limit = {
			owner = {
				has_origin = origin_ocean_paradise
			}
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			add_modifier = {
				modifier = ocean_paradise_hive
			}
		}
		else = {
			add_modifier = {
				modifier = ocean_paradise
			}
		}
		clear_deposits = yes
		clear_blockers = yes
		# Food
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		add_deposit = d_teeming_reef
		# Minerals
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		add_deposit = d_submerged_ore_veins
		# Energy
		add_deposit = d_underwater_vent
		add_deposit = d_underwater_vent
		add_deposit = d_underwater_vent
		# Bonus
		add_deposit = d_crystal_reef
		random_list = {
			50 = {
				add_deposit = d_submerged_ore_veins
			}
			50 = {
				add_deposit = d_underwater_vent
			}
		}
	}
}

# Special for Earth
generate_earth_deposits_and_blockers = {
	clear_deposits = yes
	add_deposit = d_mesopotamian_urban_corridor
	add_deposit = d_boswash_metropolitan_axis
	add_deposit = d_mauritanian_security_zone
	add_deposit = d_great_albertan_crater
	add_deposit = d_scandinavian_reclamation_sector
	add_deposit = d_saharan_irrigation_project
	add_deposit = d_pearl_river_agglomerate
	add_deposit = d_great_pacific_garbage_patch
	add_deposit = d_failing_infrastructure_earth
	add_deposit = d_decrepit_dwellings
	if = {
		limit = {
			owner = {
				is_machine_empire = yes
			}
		}
		add_deposit = d_rushing_waterfalls
	}
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_servitor
			}
		}
		add_deposit = d_hot_springs
	}
	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				NOT = {
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
		}
		while = {
			count = 4
			add_deposit = d_hibernating_lithoids
		}
	}
	if = {
		limit = {
			owner = {
				is_lithoid_empire = yes
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
		while = {
			count = 2
			add_deposit = d_hibernating_lithoids
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_life_seeded
			}
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			change_pc = pc_hive
		}
		set_planet_size = 30
		add_deposit = d_dust_caverns
		add_deposit = d_bubbling_swamp
		add_deposit = d_crystalline_caverns
	}
}

generate_start_buildings_and_districts = {
	if = {
		limit = {
			NOT = {
				owner = {
					has_origin = origin_shattered_ring
				}
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_servitor
						has_origin = origin_syncretic_evolution
						has_origin = origin_syncretic_evolution_hive
						has_origin = origin_syncretic_equals
						has_origin = origin_syncretic_livestock
						has_origin = origin_syncretic_livestock_lithoid
						has_origin = origin_extant_creators
						has_origin = origin_necrophage
					}
				}
			}
			if = {
				limit = {
					owner = {
						last_created_species = {
							is_lithoid = yes
						}
					}
				}
				owner = {
					set_country_flag = lithoid_subspecies
				}
			}
			else = {
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_tree_of_life
					is_lithoid_empire = yes
				}
			}
			owner = {
				set_country_flag = non_lithoid_subspecies
			}
		}
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			# total - 24 jobs
			# 3 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
			if = {
				limit = {
					owner = {
						NOT = {
							has_valid_civic = civic_agrarian_idyll
						}
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
			}
			else = {
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}
			if = {
				limit = {
					owner = {
						is_megacorp = yes
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_city
				}
			}
			# 4 - 6 jobs
			if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							has_country_flag = non_lithoid_subspecies
						}
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
				if = {
					limit = {
						owner = {
							OR = {
								has_origin = origin_default
								has_origin = origin_ancient_dynasty
							}
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						has_valid_civic = civic_agribusiness
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
				if = {
					limit = {
						owner = {
							OR = {
								has_origin = origin_default
								has_origin = origin_ancient_dynasty
							}
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				if = {
					limit = {
						owner = {
							OR = {
								has_origin = origin_default
								has_origin = origin_ancient_dynasty
							}
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
			}
			# 4 jobs
			if = {
				limit = {
					owner = {
						has_origin = origin_exploited_homeworld
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining					# gets deposit that gives additional miners, so only needs one
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
			}
			# 2 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_generator
			}
			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_megacorp = no
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}
			# 2 jobs
			if = {
				limit = {
					owner = {
						has_origin = origin_default
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}
			# Syncretic Livestock
			if = {
				limit = {
					owner = {
						has_origin = origin_syncretic_livestock
					}
				}
				remove_district = district_farming
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_syncretic_livestock_lithoid
					}
				}
				remove_district = district_mining
			}
			# 3 jobs
			add_building = building_capital
			# 2 jobs
			add_building = building_bureaucratic_1
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_civic_reanimated_armies = yes
					}
				}
				add_building = building_dread_encampment
				solar_system = {
					#Necromancers do not give engineering. So make sure there's some readily-accessible engineering
					while = {
						count = 2
						random_system_planet = {
							limit = {
								has_deposit_for = shipclass_research_station
								NOT = {
									has_deposit = d_engineering_6
								}
							}
							clear_deposits = yes
							add_deposit = d_engineering_6
						}
					}
				}
			}
			else = {
				add_building = building_research_lab_1
			}
			# 4-5 jobs
			if = {
				limit = {
					owner = {
						is_spiritualist = no
						has_valid_civic = civic_pleasure_seekers
					}
				}
				add_building = building_holo_theatres
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			else_if = {
				limit = {
					owner = {
						is_spiritualist = yes
						has_valid_civic = civic_death_cult
					}
				}
				add_building = building_sacrificial_temple_1
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			else_if = {
				limit = {
					owner = {
						is_megacorp = no
						is_spiritualist = yes
					}
				}
				add_building = building_temple
				if = {
					limit = {
						owner = {
							is_anglers_empire = yes
							is_catalytic_empire = yes
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_industrial
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						has_valid_civic = civic_agrarian_idyll
					}
				}
				add_building = building_farmer_market
			}
			else = {
				add_building = building_commercial_zone
			}
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			# 9 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_hive
				}
			}
			# 6-9 jobs
			if = {
				limit = {
					owner = {
						has_origin = origin_life_seeded
					}
				}
				if = {
					limit = {
						owner = {
							is_lithoid_empire = no
						}
					}
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming_uncapped
						}
					}
				}
				else = {
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining_uncapped
						}
					}
				}
				# 6 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				# 6 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator_uncapped
					}
				}
			}
			else = {
				if = {
					limit = {
						owner = {
							is_lithoid_empire = no
						}
					}
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
					if = {
						limit = {
							owner = {
								OR = {
									has_origin = origin_default
									has_origin = origin_symbiote
								}
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
				}
				else_if = {
					limit = {
						owner = {
							is_lithoid_empire = yes
							has_country_flag = non_lithoid_subspecies
							NOT = {
								has_origin = origin_tree_of_life
							}
							# taken care of below
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				else = {
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
					if = {
						limit = {
							owner = {
								OR = {
									has_origin = origin_default
									has_origin = origin_symbiote
								}
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
				}
				# 6 jobs3
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				# 6 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_tree_of_life
					}
				}
				remove_district = district_mining
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}
			# 3 jobs
			if = {
				limit = {
					owner = {
						has_origin = origin_default
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}
			}
			# 2 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_industrial
			}
			# Syncretic Livestock
			if = {
				limit = {
					owner = {
						has_origin = origin_syncretic_livestock
					}
				}
				remove_district = district_farming
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_syncretic_livestock_lithoid
					}
				}
				remove_district = district_mining
			}
			# 5 jobs
			add_building = building_hive_capital
			# 2 jobs
			add_building = building_research_lab_1
			if = {
				limit = {
					#Necrophages need fewer complex drones or the menial drone slots won't be filled
					NOT = {
						owner = {
							has_origin = origin_necrophage
						}
					}
				}
				# 2 jobs
				add_building = building_hive_node
			}
			if = {
				#This building is very useless for Devouring Swarm Necrophages
				limit = {
					NOT = {
						owner = {
							has_origin = origin_necrophage
							has_valid_civic = civic_hive_devouring_swarm
						}
					}
				}
				# 1 job
				add_building = building_spawning_pool
			}
		}
		# Replace capital building for machine empires
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			# total - 27 jobs
			# 3 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_nexus
				}
			}
			# 2 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_industrial
			}
			# 6 jobs
			add_building = building_machine_capital
			# 1 job
			add_building = building_machine_assembly_plant
			# 2 job
			add_building = building_uplink_node
			# 2 jobs
			add_building = building_research_lab_1
			if = {
				limit = {
					owner = {
						NOT = {
							has_origin = origin_machine
						}
					}
				}
				# 4 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
				# 2 jobs
				if = {
					limit = {
						owner = {
							has_origin = origin_default
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				# 8 jobs
				while = {
					count = 4
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
				# 2 jobs
				if = {
					limit = {
						owner = {
							has_origin = origin_default
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
				if = {
					limit = {
						owner = {
							has_origin = origin_extant_creators
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
				#Assimilators
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_assimilator
						}
					}
					remove_district = district_generator
					if = {
						limit = {
							owner = {
								has_country_flag = lithoid_subspecies
							}
						}
						while = {
							count = 2
							add_district_and_planet_size_if_needed_effect = {
								district = district_mining
							}
						}
					}
					else = {
						while = {
							count = 2
							add_district_and_planet_size_if_needed_effect = {
								district = district_farming
							}
						}
					}
				}
				#Servitors
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_servitor
						}
					}
					if = {
						limit = {
							owner = {
								has_country_flag = lithoid_subspecies
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
					else = {
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
					add_building = building_organic_sanctuary
				}
				# Extant Creators
				if = {
					limit = {
						owner = {
							has_origin = origin_extant_creators
							NOR = {
								has_civic = civic_machine_assimilator
								has_civic = civic_machine_servitor
							}
						}
					}
					if = {
						limit = {
							owner = {
								has_country_flag = lithoid_subspecies
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
					else = {
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
					remove_district = district_generator
					add_district_and_planet_size_if_needed_effect = {
						district = district_nexus						# Needs an extra building slot
					}
					add_building = building_individualist_enclave
				}
			}
			else_if = {
				limit = {
					owner = {
						has_origin = origin_machine
					}
				}
				while = {
					count = 4
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator_uncapped
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
				#Assimilators
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_assimilator
						}
					}
					add_deposit = d_organic_slurry
				}
				# Blocker that removes the extra machine world replicator jobs until removed
				add_deposit = d_resource_consolidation_1
			}
		}
		# Replace a mining district with a farming district for lithoid empires with an organic secondary species that use food for alloy production
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					has_country_flag = non_lithoid_subspecies
					is_catalytic_empire = yes
				}
			}
			remove_district = district_mining
			add_district_and_planet_size_if_needed_effect = {
				district = district_farming
			}
		}
		# Replace two mining districts with farming district for non-machine empires that use food for alloy production
		if = {
			limit = {
				owner = {
					NOT = {
						has_country_flag = non_lithoid_subspecies
					}
					NOT = {
						has_authority = auth_machine_intelligence
					}
					is_catalytic_empire = yes
				}
			}
			while = {
				count = 2
				remove_district = district_mining
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}
		}
		# And machine empires swap a generator district for another farming district
		if = {
			limit = {
				owner = {
					has_authority = auth_machine_intelligence
					is_catalytic_empire = yes
				}
			}
			remove_district = district_mining
			add_district_and_planet_size_if_needed_effect = {
				district = district_farming
			}
			remove_district = district_generator
			add_district_and_planet_size_if_needed_effect = {
				district = district_farming
			}
		}
		# Replace 1 generator district with 1 farming district for anglers civic on wet worlds
		if = {
			limit = {
				owner = {
					is_anglers_empire = yes
				}
				has_climate = wet
			}
			remove_district = district_generator
			add_district = district_farming
		}
		# Replace farming districts with uncapped ones for anglers civic on ocean worlds
		if = {
			limit = {
				owner = {
					is_anglers_empire = yes
				}
				OR = {
					is_ocean = yes
					is_planet_class = pc_gaia
				}
			}
			while = {
				limit = {
					num_districts = {
						type = district_farming
						value > 0
					}
				}
				remove_district = district_farming
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming_uncapped
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_shattered_ring
			}
		}
		add_deposit = d_segment_rubble_1
		add_deposit = d_segment_rubble_2
		add_deposit = d_segment_rubble_3
		add_deposit = d_segment_rubble_4
		add_deposit = d_decrepit_tunnels_1
		add_deposit = d_decrepit_tunnels_2
		add_deposit = d_decrepit_tunnels_3
		if = {
			limit = {
				owner = {
					has_civic = civic_machine_servitor
				}
			}
			add_deposit = d_unsupervised_settlement
		}
		else_if = {
			limit = {
				owner = {
					has_authority = auth_hive_mind
				}
			}
			add_deposit = d_collapsed_burrows
		}
		else = {
			add_deposit = d_decrepit_dwellings
		}
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					NOT = {
						has_valid_civic = civic_hive_devouring_swarm
					}
				}
			}
			while = {
				count = 4
				add_deposit = d_hibernating_lithoids
			}
		}
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
			while = {
				count = 2
				add_deposit = d_hibernating_lithoids
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_machine_assimilator
						has_valid_civic = civic_machine_servitor
					}
				}
			}
			if = {
				limit = {
					owner = {
						last_created_species = {
							is_lithoid = yes
						}
					}
				}
				owner = {
					set_country_flag = lithoid_subspecies
				}
			}
			else = {
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			# total - 24 jobs
			# 3 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
			if = {
				limit = {
					owner = {
						NOT = {
							has_valid_civic = civic_agrarian_idyll
						}
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
			}
			if = {
				limit = {
					owner = {
						is_megacorp = yes
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_city
				}
			}
			# 4 - 6 jobs
			if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							has_country_flag = non_lithoid_subspecies
						}
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
				if = {
					limit = {
						owner = {
							has_origin = origin_default
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
			}
			# 4 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
			}
			# 2 jobs
			add_district_and_planet_size_if_needed_effect = {
				district = district_srw_commercial
			}
			# 4 jobs
			while = {
				count = 1
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_srw_commercial
			}
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_megacorp = no
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_srw_commercial
				}
			}
			# 3 jobs
			add_building = building_capital
			# 2 jobs
			add_building = building_bureaucratic_1
			# 2 jobs
			if = {
				limit = {
					owner = {
						is_civic_reanimated_armies = yes
					}
				}
				add_building = building_dread_encampment
				solar_system = {
					#Necromancers do not give engineering. So make sure there's some readily-accessible engineering
					random_system_planet = {
						limit = {
							has_deposit_for = shipclass_research_station
							has_deposit = d_engineering_5
						}
						# Total size 15 deposit as the Irreparable Damage is normally a size 5 and non-Shattered Ring starts get an additional two size 6 deposits.
						add_deposit = d_engineering_10
					}
				}
			}
			else = {
				add_building = building_research_lab_1
			}
			# 4-5 jobs
			if = {
				limit = {
					owner = {
						NOT = {
							has_valid_civic = civic_agrarian_idyll
						}
					}
				}
				if = {
					limit = {
						owner = {
							is_spiritualist = no
							has_valid_civic = civic_pleasure_seekers
						}
					}
					add_building = building_holo_theatres
					add_district_and_planet_size_if_needed_effect = {
						district = district_srw_commercial
					}
				}
				else_if = {
					limit = {
						owner = {
							is_spiritualist = yes
							has_valid_civic = civic_death_cult
						}
					}
					add_building = building_sacrificial_temple_1
					add_district_and_planet_size_if_needed_effect = {
						district = district_srw_commercial
					}
				}
				else_if = {
					limit = {
						owner = {
							is_megacorp = no
							is_spiritualist = yes
						}
					}
					add_building = building_temple
					add_district_and_planet_size_if_needed_effect = {
						district = district_srw_commercial
					}
				}
				else = {
					add_building = building_commercial_zone
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			# 9 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_hive
				}
			}
			# 6-9 jobs
			if = {
				limit = {
					owner = {
						is_lithoid_empire = no
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
			}
			else = {
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
			}
			# 6 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
			}
			# 6 jobs
			while = {
				count = 2
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator_uncapped
				}
			}
			# 2 jobs
			while = {
				count = 1
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			# 5 jobs
			add_building = building_hive_capital
			# 2 jobs
			add_building = building_research_lab_1
			# 2 jobs
			add_building = building_hive_node
			# 1 job
			add_building = building_spawning_pool
		}
		# Replace capital building for machine empires
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			# total - 27 jobs
			# 3 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_nexus
				}
			}
			# 6 jobs
			while = {
				count = 3
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
			}
			# 6 jobs
			add_building = building_machine_capital
			# 1 job
			add_building = building_machine_assembly_plant
			# 2 job
			add_building = building_uplink_node
			# 2 jobs
			add_building = building_research_lab_1
			# 2 jobs
			while = {
				count = 1
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
			}
			# 8 jobs
			while = {
				count = 4
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator_uncapped
				}
			}
			#Assimilators
			if = {
				limit = {
					owner = {
						has_civic = civic_machine_assimilator
					}
				}
				remove_district = district_generator_uncapped
				if = {
					limit = {
						owner = {
							has_country_flag = lithoid_subspecies
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
			}
			#Servitors
			if = {
				limit = {
					owner = {
						has_civic = civic_machine_servitor
					}
				}
				if = {
					limit = {
						owner = {
							has_country_flag = lithoid_subspecies
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
				add_building = building_organic_sanctuary
			}
		}
	}
	# Additional resources based on empire type and possible subspecies
	owner = {
		give_starting_resources_effect = yes
	}
}

generate_start_pops = {
	# create some owner pops to take the ruler jobs first
	while = {
		count = 12
		create_pop = {
			species = owner_main_species
			ethos = random
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_evolution
					has_origin = origin_syncretic_evolution_hive
					has_origin = origin_syncretic_equals
					has_origin = origin_syncretic_livestock
					has_origin = origin_syncretic_livestock_lithoid
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_symbiotic_race
					has_valid_civic = civic_slave_race
					has_origin = origin_extant_creators
					has_origin = origin_necrophage
				}
			}
		}
		if = {
			limit = {
				last_created_species = {
					is_species_class = MACHINE
				}
			}
			modify_species = {
				species = last_created_species
				add_trait = trait_machine_unit
				add_traits_at_start_of_list = yes
			}
			last_created_species = {
				save_event_target_as = last_created_species
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_syncretic_evolution
						has_origin = origin_syncretic_evolution_hive
						has_origin = origin_syncretic_equals
						has_origin = origin_necrophage
						has_valid_civic = civic_symbiotic_race
						has_valid_civic = civic_slave_race
					}
				}
			}
			if = {
				limit = {
					owner = {
						is_hive_empire = yes
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_full
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_xenophobe = no
						is_authoritarian = no
						NOR = {
							has_origin = origin_necrophage
							has_valid_civic = civic_symbiotic_race
							has_valid_civic = civic_slave_race
						}
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_limited
					}
				}
			}
			else = {
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
				}
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						OR = {
							has_valid_civic = civic_fanatic_purifiers
							has_valid_civic = civic_hive_devouring_swarm
						}
					}
				}
				while = {
					count = 6
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						is_gestalt = yes
					}
				}
				while = {
					count = 9
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
			else = {
				while = {
					count = 12
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_syncretic_livestock
						has_origin = origin_syncretic_livestock_lithoid
					}
					is_hive_empire = no
				}
			}
			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				set_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
			while = {
				count = 6
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_syncretic_livestock
						has_origin = origin_syncretic_livestock_lithoid
					}
					is_hive_empire = yes
				}
			}
			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				set_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
			while = {
				count = 8
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			last_created_species = {
				if = {
					limit = {
						ROOT = {
							is_planet_class = pc_shattered_ring_habitable
						}
					}
					modify_species = {
						species = this
						ideal_planet_class = home_planet
					}
				}
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_organic_trophy
				}
			}
			while = {
				count = 5
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_default
					}
				}
				while = {
					count = 2
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_extant_creators
				}
			}
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_limited
				}
			}
			while = {
				count = 12
				create_pop = {
					species = last_created_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_assimilator
				}
			}
			last_created_species = {
				set_citizenship_type = {
					country = root.owner
					type = citizenship_full_machine
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_hive_mind
				}
				modify_species = {
					species = last_created_species
					ideal_planet_class = prev
				}
				if = {
					limit = {
						ROOT = {
							is_planet_class = pc_shattered_ring_habitable
						}
					}
					modify_species = {
						species = this
						ideal_planet_class = home_planet
					}
				}
			}
			while = {
				count = 10
				create_pop = {
					species = last_created_species
					ethos = random
				}
				last_created_pop = {
					clear_ethos = yes
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_cult
			}
		}
		owner = {
			create_built_robot_species = yes
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
		add_building = building_mecha_monastery
		add_building = building_robot_assembly_plant
		while = {
			limit = {
				num_pops < 30
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_mechanists
			}
		}
		owner = {
			create_built_robot_species = yes
		}
		while = {
			count = 8
			create_pop = {
				species = last_created_species
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_agrarian_idyll
				}
				# Needs an extra building slot
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
		}
		add_building = building_robot_assembly_plant
		add_district_and_planet_size_if_needed_effect = {
			district = district_generator
		}
		while = {
			limit = {
				num_pops < 27
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				NOR = {
					#purges them instead
					has_civic = civic_fanatic_purifiers
					has_civic = civic_hive_devouring_swarm
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_agrarian_idyll
				}
				# Needs an extra building slot
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
		}
		add_building = building_necrophage_elevation_chamber
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				has_valid_civic = civic_hive_devouring_swarm				#purges them instead
				is_lithoid_empire = no
			}
		}
		add_building = building_spawning_pool
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_necrophage
				has_valid_civic = civic_hive_devouring_swarm
				is_lithoid_empire = yes
			}
		}
		add_district_and_planet_size_if_needed_effect = {
			district = district_mining
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_clone_army
			}
		}
		add_building = building_clone_army_clone_vat
		add_building = building_clone_army_clone_vat
		planet_event = {
			id = clones.10
			days = 1095
			random = 730
		}
	}
	if = {
		limit = {
			owner = {
				is_hive_empire = yes
			}
		}
		while = {
			limit = {
				num_pops < 33
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_hive_empire = yes
				NOT = {
					has_origin = origin_hive_overmind
				}
			}
		}
		while = {
			limit = {
				num_pops < 33
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_hive_overmind
			}
		}
		last_created_species = {
			if = {
				limit = {
					is_lithoid = yes
				}
				root = {
					owner = {
						set_country_flag = lithoid_overminded_species
					}
				}
			}
			else = {
				root = {
					owner = {
						set_country_flag = organic_overminded_species
					}
				}
			}
		}
		while = {
			limit = {
				num_pops < 33
			}
			create_pop = {
				species = last_created_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_replicators
			}
		}
		last_created_species = {
			save_event_target_as = replicate
		}
		create_replica = yes
		event_target:new_replica = {
			set_species_flag = replicated_species@root.owner
		}
		while = {
			count = 29
			create_pop = {
				species = event_target:new_replica
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_default
				}
			}
			while = {
				count = 4
				create_pop = {
					species = event_target:new_replica
				}
			}
		}
		owner = {
			change_dominant_species = {
				species = event_target:replicate
				change_all = yes
			}
			#for some reason i need this, else colonization rights will bug
			country_event = {
				id = cx_machine_replicators.0
				days = 1
			}
			every_owned_leader = {
				change_species = event_target:new_replica
				change_leader_portrait = species
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_servitor
			}
		}
		while = {
			limit = {
				num_pops < 33
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_default
				}
			}
			while = {
				count = 2
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_extant_creators
			}
		}
		while = {
			limit = {
				num_pops < 33
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_machine_empire = yes
			}
		}
		while = {
			limit = {
				num_pops < 29
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_megacorp = yes
			}
		}
		while = {
			limit = {
				num_pops < 28
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_regular_empire = yes
			}
		}
		while = {
			limit = {
				num_pops < 28
			}
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_livestock
					has_origin = origin_syncretic_livestock_lithoid
				}
			}
		}
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			#homicidal necrophages lose 1/4 of their necrophytes to fleeing
			owner = {
				has_origin = origin_necrophage
				is_homicidal = yes
			}
		}
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_default
				NOT = {
					has_valid_civic = civic_machine_replicators
				}
			}
		}
		while = {
			count = 4
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_ancient_dynasty
			}
		}
		while = {
			count = 3
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_symbiote
			}
		}
		while = {
			count = 3
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_militarist
			}
		}
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_civic = civic_slaver_guilds
					has_civic = civic_indentured_assets
					has_origin = origin_syncretic_evolution
					has_origin = origin_syncretic_equals
					has_origin = origin_syncretic_livestock
					has_origin = origin_syncretic_livestock_lithoid
					has_origin = origin_militarist
					is_authoritarian = yes
				}
			}
		}
		if = {
			limit = {
				free_building_slots < 1
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_city
			}
		}
		add_building = building_precinct_house
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_livestock
					has_origin = origin_syncretic_livestock_lithoid
					has_origin = origin_extant_creators
				}
			}
		}
		if = {
			limit = {
				free_building_slots < 1
				is_hive_empire = yes
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hive
			}
		}
		else_if = {
			limit = {
				free_building_slots < 1
				is_machine_empire = yes
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_nexus
			}
		}
		add_building = building_sentinel_posts
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
}

generate_home_planet_final_pass = {
	# Adjust life-seeded colonies
	if = {
		limit = {
			owner = {
				has_origin = origin_life_seeded
			}
		}
		add_modifier = {
			modifier = life_seeded_mod
			days = -1
		}
		owner = {
			# Nuke other colonies gained from advanced empire, etc
			every_owned_planet = {
				limit = {
					is_capital = no
				}
				remove_all_buildings = yes
				destroy_colony = yes
			}
			change_dominant_species = {
				species = last_created_species
				change_all = yes
			}
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_shattered_ring
					has_origin = origin_machine
				}
			}
		}
		owner = {
			capital_scope = {
				system_star = {
					set_deposit = d_energy_10
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_tree_of_life
			}
		}
		owner = {
			capital_scope = {
				add_deposit = d_tree_of_life_home
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_lithoid
			}
		}
		owner = {
			capital_scope = {
				add_deposit = d_lithoid_crater
				while = {
					count = 4
					add_deposit = d_buried_lithoids
				}
				add_modifier = {
					modifier = lithoid_crater
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_lost_colony
			}
		}
		owner = {
			capital_scope = {
				add_modifier = {
					modifier = colonial_spirit_mod
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_default
			}
		}
		owner = {
			capital_scope = {
				add_modifier = {
					modifier = prosp_uni_mod
					days = 7200
				}
			}
			if = {
				limit = {
					has_country_flag = human_1
				}
				capital_scope = {
					add_deposit = d_united_nations
				}
			}
			else_if = {
				limit = {
					is_regular_empire = yes
				}
				capital_scope = {
					add_deposit = d_default
				}
			}
			else_if = {
				limit = {
					is_hive_empire = yes
				}
				capital_scope = {
					add_deposit = d_default_hive
				}
			}
			else_if = {
				limit = {
					is_machine_empire = yes
				}
				capital_scope = {
					add_deposit = d_default_machine
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_private_colony
			}
		}
		owner = {
			if = {
				limit = {
					is_megacorp = no
				}
				capital_scope = {
					add_modifier = {
						modifier = prosp_uni_mod
						days = 7200
					}
					add_deposit = d_default
				}
			}
			else = {
				capital_scope = {
					add_modifier = {
						modifier = colonial_spirit_mod
					}
					add_deposit = d_lost_colony
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_doomsday
				is_ai = yes
			}
		}
		owner = {
			create_fleet = {
				name = "NAME_LAST_HOPE"
				effect = {
					set_owner = prev
					create_ship = {
						name = "NAME_LAST_HOPE"
						random_existing_design = colonizer
						colonizer_species = prev.owner_species
					}
					set_location = prev.capital_scope
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_militarist
			}
		}
		add_modifier = {
			modifier = temp_uni_mod
			days = 18000
		}
		add_deposit = d_ego_statue
		owner = {
			create_fleet = {
				effect = {
					set_owner = prev
					while = {
						count = 6
						create_ship = {
							name = random
							random_existing_design = corvette
						}
					}
					set_location = prev.capital_star
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_machine
			}
		}
		owner = {
			capital_scope = {
				add_deposit = d_machine_minerals
				solar_system = {
					every_system_planet = {
						limit = {
							colonizable_planet = no
							is_star = no
						}
						clear_deposits = yes
					}
					every_system_planet = {
						limit = {
							is_asteroid = yes
						}
						remove_planet = yes
					}
					every_system_planet = {
						limit = {
							colonizable_planet = no
							is_star = no
							is_asteroid = no
							NOT = {
								is_planet_class = pc_gas_giant
							}
						}
						change_pc = pc_broken
					}
					every_system_planet = {
						limit = {
							colonizable_planet = no
							is_star = no
							is_planet_class = pc_gas_giant
						}
						change_pc = pc_molten
						add_modifier = {
							modifier = chthonian_planet
						}
						every_moon = {
							limit = {
								colonizable_planet = no
							}
							remove_planet = yes
						}
						while = {
							limit = {
								planet_size >= 20
							}
							change_planet_size = -6
						}
					}
				}
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_origin = origin_little_sister
			}
		}
		owner = {
			save_event_target_as = little_sister_owner
			add_research_option = tech_cryostasis_1
		}
		solar_system = {
			random_system_planet = {
				limit = {
					has_planet_flag = sister_colony
				}
				set_owner = event_target:little_sister_owner
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_assimilator
						}
					}
					while = {
						count = 4
						create_pop = {
							species = owner_main_species
						}
					}
					while = {
						count = 2
						create_pop = {
							species = last_created_species
						}
					}
				}
				else_if = {
					limit = {
						owner = {
							is_gestalt = yes
						}
					}
					while = {
						count = 6
						create_pop = {
							species = owner_main_species
						}
					}
				}
				else = {
					while = {
						count = 4
						create_pop = {
							species = owner_main_species
						}
					}
				}
				if = {
					limit = {
						owner = {
							is_machine_empire = yes
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}
				else_if = {
					limit = {
						owner = {
							is_lithoid_empire = yes
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}
		}
	}
}

### Origins
void_dweller_home_planet_setup = {
	owner = {
		save_event_target_as = void_dweller_owner
		give_technology = {
			tech = tech_habitat_1
			message = no
		}
		add_research_option = tech_habitat_2
		if = {
			limit = {
				OR = {
					is_catalytic_empire = yes
					AND = {
						is_lithoid_empire = no
						is_machine_empire = no
					}
				}
			}
			give_technology = {
				tech = tech_eco_simulation
				message = no
			}
			give_technology = {
				tech = tech_hydroponics
				message = no
			}
		}
		else_if = {
			limit = {
				is_machine_empire = yes
			}
			give_technology = {
				tech = tech_power_hub_1
				message = no
			}
			give_technology = {
				tech = tech_space_mining_1
				message = no
			}
		}
		else = {
			give_technology = {
				tech = tech_powered_exoskeletons
				message = no
			}
			give_technology = {
				tech = tech_space_mining_1
				message = no
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_machine_empire = no
			}
		}
		modify_species = {
			species = owner_main_species
			add_trait = trait_void_dweller_1
			add_traits_at_start_of_list = yes
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					has_civic = civic_machine_assimilator
					has_civic = civic_machine_servitor
				}
			}
		}
		modify_species = {
			species = last_created_species
			add_trait = trait_void_dweller_1
			add_traits_at_start_of_list = yes
		}
		if = {
			limit = {
				owner = {
					last_created_species = {
						is_lithoid = yes
					}
				}
			}
			owner = {
				set_country_flag = lithoid_subspecies
			}
		}
		else = {
			owner = {
				set_country_flag = non_lithoid_subspecies
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_civic = civic_machine_assimilator
			}
		}
		while = {
			count = 8
			create_pop = {
				species = owner_main_species
			}
		}
		while = {
			count = 4
			create_pop = {
				species = last_created_species
			}
		}
	}
	else = {
		while = {
			count = 12
			create_pop = {
				species = owner_main_species
			}
		}
	}
	set_planet_entity = {
		entity = "habitat_phase_02_entity"
		graphical_culture = event_target:void_dweller_owner
	}
	set_planet_size = 6
	set_planet_flag = advanced_habitat
	set_planet_flag = research_habitat
	set_planet_flag = void_dweller_habitat
	add_district_and_planet_size_if_needed_effect = {
		district = district_hab_housing
	}
	add_district_and_planet_size_if_needed_effect = {
		district = district_hab_industrial
	}
	if = {
		limit = {
			owner = {
				is_gestalt = no
			}
		}
		add_district_and_planet_size_if_needed_effect = {
			district = district_hab_industrial
		}
	}
	add_building = building_hab_major_capital
	if = {
		limit = {
			owner = {
				is_machine_empire = yes
			}
		}
		add_building = building_machine_assembly_plant
		add_building = building_uplink_node
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
			}
		}
		if = {
			limit = {
				owner = {
					has_civic = civic_machine_servitor
				}
			}
			while = {
				count = 2
				create_pop = {
					species = last_created_species
				}
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
				OR = {
					is_lithoid_empire = no
					is_catalytic_empire = yes
				}
			}
		}
		add_district_and_planet_size_if_needed_effect = {
			district = district_hab_housing
		}
		add_building = building_spawning_pool
		add_building = building_hydroponics_farm
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
				is_lithoid_empire = yes
			}
		}
		add_building = building_spawning_pool
		add_building = building_hive_node
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_lithoid_empire = no
			}
		}
		add_building = building_bureaucratic_1
	}
	else_if = {
		limit = {
			owner = {
				has_valid_civic = civic_warrior_culture
			}
		}
		add_building = building_combat_arena
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
				}
			}
			add_building = building_temple
		}
		else = {
			add_building = building_commercial_zone
		}
	}
	else = {
		add_building = building_holo_theatres
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
				}
			}
			add_building = building_temple
		}
		else = {
			add_building = building_commercial_zone
		}
	}
	if = {
		limit = {
			owner = {
				is_civic_reanimated_armies = yes
			}
		}
		add_building = building_dread_encampment
		solar_system = {
			#Necromancers do not give engineering. So make sure there's some readily-accessible engineering
			while = {
				count = 2
				random_system_planet = {
					limit = {
						has_deposit_for = shipclass_research_station
						NOT = {
							has_deposit = d_engineering_6
						}
					}
					clear_deposits = yes
					add_deposit = d_engineering_6
				}
			}
		}
	}
	else = {
		add_district_and_planet_size_if_needed_effect = {
			district = district_hab_science
		}
	}
	if = {
		limit = {
			owner = {
				is_regular_empire = yes
			}
		}
		add_deposit = d_arcane_replicator
	}
	else = {
		add_deposit = d_arcane_replicator_gestalt
	}
	solar_system = {
		random_system_planet = {
			limit = {
				has_planet_flag = void_dweller_habitat_2
			}
			set_owner = event_target:void_dweller_owner
			if = {
				limit = {
					owner = {
						has_civic = civic_machine_assimilator
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
			}
			else = {
				while = {
					count = 9
					create_pop = {
						species = owner_main_species
					}
				}
			}
			set_planet_entity = {
				entity = "habitat_phase_01_entity"
				graphical_culture = event_target:void_dweller_owner
			}
			set_planet_size = 4
			set_planet_flag = mining_habitat
			set_planet_flag = void_dweller_habitat
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_housing
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_mining
			}
			if = {
				limit = {
					owner = {
						is_machine_empire = yes
					}
				}
				while = {
					count = 2
					create_pop = {
						species = owner_main_species
					}
				}
				if = {
					limit = {
						owner = {
							OR = {
								has_civic = civic_machine_servitor
								has_civic = civic_machine_assimilator
								is_catalytic_empire = yes
							}
						}
					}
					if = {
						limit = {
							owner = {
								OR = {
									NOT = {
										has_country_flag = lithoid_subspecies
									}
									is_catalytic_empire = yes
								}
							}
						}
						add_building = building_hydroponics_farm
					}
					else = {
						add_district_and_planet_size_if_needed_effect = {
							district = district_hab_mining
						}
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_hab_mining
					}
				}
			}
			else_if = {
				while = {
					count = 2
					create_pop = {
						species = owner_main_species
					}
				}
				limit = {
					owner = {
						is_hive_empire = yes
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
				}
				add_building = building_hydroponics_farm
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_mining
				}
			}
			else_if = {
				while = {
					count = 2
					create_pop = {
						species = owner_main_species
					}
				}
				limit = {
					owner = {
						is_hive_empire = yes
						is_lithoid_empire = yes
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_hab_mining
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
				}
				add_building = building_hydroponics_farm
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_commercial
				}
			}
			else = {
				add_building = building_commercial_zone
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_mining
				}
			}
			if = {
				limit = {
					owner = {
						is_gestalt = yes
					}
				}
				add_deposit = d_arcane_replicator_gestalt
			}
		}
		random_system_planet = {
			limit = {
				has_planet_flag = void_dweller_habitat_3
			}
			set_owner = event_target:void_dweller_owner
			if = {
				limit = {
					owner = {
						has_civic = civic_machine_assimilator
					}
				}
				while = {
					count = 6
					create_pop = {
						species = owner_main_species
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
			}
			else = {
				while = {
					count = 9
					create_pop = {
						species = owner_main_species
					}
				}
			}
			set_planet_entity = {
				entity = "habitat_phase_01_entity"
				graphical_culture = event_target:void_dweller_owner
			}
			set_planet_size = 4
			set_planet_flag = energy_habitat
			set_planet_flag = void_dweller_habitat
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_housing
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_hab_energy
			}
			if = {
				limit = {
					owner = {
						is_machine_empire = yes
					}
				}
				while = {
					count = 2
					create_pop = {
						species = owner_main_species
					}
				}
				add_building = building_energy_grid
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_energy
				}
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_servitor
						}
					}
					while = {
						count = 2
						create_pop = {
							species = last_created_species
						}
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						is_hive_empire = yes
						is_lithoid_empire = no
					}
				}
				add_building = building_hive_node
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_energy
				}
			}
			else_if = {
				limit = {
					owner = {
						is_hive_empire = yes
						is_lithoid_empire = yes
					}
				}
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_hab_energy
					}
				}
			}
			else_if = {
				limit = {
					owner = {
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
				}
				add_building = building_hydroponics_farm
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_commercial
				}
			}
			else = {
				add_building = building_bureaucratic_1
				add_district_and_planet_size_if_needed_effect = {
					district = district_hab_commercial
				}
			}
			if = {
				limit = {
					owner = {
						is_gestalt = yes
					}
				}
				add_deposit = d_arcane_replicator_gestalt
			}
		}
		every_system_planet = {
			limit = {
				has_planet_flag = mining_planet
			}
			create_mining_station = {
				owner = event_target:void_dweller_owner
			}
		}
	}
}

add_district_and_planet_size_if_needed_effect = {
	if = {
		limit = {
			free_district_slots >= 1
		}
		add_district = {
			district_type = $district$
			ignore_cap = yes
		}
	}
	else_if = {
		limit = {
			free_district_slots = 0
			planet_size < 25
		}
		change_planet_size = 1
		add_district = {
			district_type = $district$
			ignore_cap = yes
		}
	}
	#else do nothing
}

give_starting_resources_effect = {
	if = {
		limit = {
			is_catalytic_empire = yes
		}
		add_resource = {
			food = 100
		}
	}
	if = {
		limit = {
			has_authority = auth_machine_intelligence
		}
		if = {
			limit = {
				OR = {
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					has_origin = origin_extant_creators
				}
			}
			if = {
				limit = {
					has_country_flag = lithoid_subspecies
				}
				add_resource = {
					minerals = 100
				}
				add_resource = {
					energy = 100
				}
			}
			else = {
				add_resource = {
					food = 100
				}
				add_resource = {
					energy = 100
				}
			}
		}
		else = {
			add_resource = {
				energy = 200
			}
		}
	}
	else = {
		if = {
			limit = {
				is_lithoid_empire = no
			}
			if = {
				limit = {
					has_country_flag = lithoid_subspecies
				}
				add_resource = {
					food = 100
				}
				add_resource = {
					minerals = 100
				}
			}
			else = {
				add_resource = {
					food = 200
				}
			}
		}
		else = {
			if = {
				limit = {
					has_country_flag = non_lithoid_subspecies
				}
				add_resource = {
					food = 100
				}
				add_resource = {
					minerals = 100
				}
			}
			else = {
				add_resource = {
					minerals = 200
				}
			}
		}
	}
}
